// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: youtube_playlist_videos.sql

package db

import (
	"context"
)

const createYouTubePlaylistVideo = `-- name: CreateYouTubePlaylistVideo :exec
INSERT INTO youtube_playlist_videos (playlist_id, video_id)
VALUES ($1, $2)
`

type CreateYouTubePlaylistVideoParams struct {
	PlaylistID string
	VideoID    string
}

func (q *Queries) CreateYouTubePlaylistVideo(ctx context.Context, arg CreateYouTubePlaylistVideoParams) error {
	_, err := q.db.Exec(ctx, createYouTubePlaylistVideo, arg.PlaylistID, arg.VideoID)
	return err
}

const listYouTubePlaylistVideoIDs = `-- name: ListYouTubePlaylistVideoIDs :many
SELECT video_id FROM youtube_playlist_videos
WHERE playlist_id = $1
`

func (q *Queries) ListYouTubePlaylistVideoIDs(ctx context.Context, playlistID string) ([]string, error) {
	rows, err := q.db.Query(ctx, listYouTubePlaylistVideoIDs, playlistID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []string
	for rows.Next() {
		var video_id string
		if err := rows.Scan(&video_id); err != nil {
			return nil, err
		}
		items = append(items, video_id)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
